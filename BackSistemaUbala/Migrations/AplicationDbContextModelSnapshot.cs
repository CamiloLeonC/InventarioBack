// <auto-generated />
using System;
using BackSistemaUbala;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackSistemaUbala.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    partial class AplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackSistemaUbala.Models.AlumnoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<int>("Jornada")
                        .HasColumnType("int");

                    b.Property<string>("NombreAcudiente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroAcudiente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSangre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupo");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<int>("Jornada")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreAcudiente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NumeroAcudiente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSangre")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.GrupoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Curso")
                        .HasColumnType("int");

                    b.Property<int>("Grado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.MateriaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.MateriaProfesorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMateria")
                        .HasColumnType("int");

                    b.Property<int?>("IdProfesor")
                        .HasColumnType("int");

                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdMateria");

                    b.HasIndex("IdProfesor");

                    b.HasIndex("IdUser");

                    b.ToTable("MateriaProfesores");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.NotaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DefinitivaTotal")
                        .HasColumnType("decimal(4,2)");

                    b.Property<int?>("IdAlumno")
                        .HasColumnType("int");

                    b.Property<int>("IdMateriaProfesor")
                        .HasColumnType("int");

                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("NotaHacer")
                        .HasColumnType("decimal(4,2)");

                    b.Property<decimal>("NotaSaber")
                        .HasColumnType("decimal(4,2)");

                    b.Property<decimal>("NotaSer")
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdMateriaProfesor");

                    b.HasIndex("IdUser");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.ProfesorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupo");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationClaim", b =>
                {
                    b.Property<int>("IdClaim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClaimCode")
                        .HasColumnType("int");

                    b.Property<string>("ClaimDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimPestanas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.HasKey("IdClaim");

                    b.ToTable("AspNetClaim");
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("ClaimPermission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<string>("ClaimValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("RoleId", "ClaimId");

                    b.HasIndex("ClaimId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<string>("ClaimValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<bool?>("Denied")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserId", "ClaimId");

                    b.HasIndex("ClaimId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.AlumnoModel", b =>
                {
                    b.HasOne("BackSistemaUbala.Models.GrupoModel", "Grupo")
                        .WithMany("Alumnos")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.ApplicationUser", b =>
                {
                    b.HasOne("BackSistemaUbala.Models.GrupoModel", "Grupo")
                        .WithMany("ApplicationUser")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.MateriaProfesorModel", b =>
                {
                    b.HasOne("BackSistemaUbala.Models.MateriaModel", "Materia")
                        .WithMany("MateriaProfesores")
                        .HasForeignKey("IdMateria")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BackSistemaUbala.Models.ProfesorModel", "Profesor")
                        .WithMany("MateriasProfesor")
                        .HasForeignKey("IdProfesor")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BackSistemaUbala.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("MateriasProfesor")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Materia");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.NotaModel", b =>
                {
                    b.HasOne("BackSistemaUbala.Models.AlumnoModel", "Alumno")
                        .WithMany("NotasAlumnos")
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BackSistemaUbala.Models.MateriaProfesorModel", "MateriaProfesor")
                        .WithMany("Notas")
                        .HasForeignKey("IdMateriaProfesor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BackSistemaUbala.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("NotasAlumnos")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Alumno");

                    b.Navigation("ApplicationUser");

                    b.Navigation("MateriaProfesor");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.ProfesorModel", b =>
                {
                    b.HasOne("BackSistemaUbala.Models.GrupoModel", "Grupo")
                        .WithMany("Profesores")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationRoleClaim", b =>
                {
                    b.HasOne("General_back.Security.Models.ApplicationClaim", "Claim")
                        .WithMany("RolesClaims")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackSistemaUbala.Models.ApplicationRole", "Role")
                        .WithMany("Funcionalidades")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationUserClaim", b =>
                {
                    b.HasOne("General_back.Security.Models.ApplicationClaim", "Claim")
                        .WithMany("UsersClaims")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackSistemaUbala.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationUserLogin", b =>
                {
                    b.HasOne("BackSistemaUbala.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("BackSistemaUbala.Models.ApplicationRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackSistemaUbala.Models.ApplicationUser", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationUserToken", b =>
                {
                    b.HasOne("BackSistemaUbala.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackSistemaUbala.Models.AlumnoModel", b =>
                {
                    b.Navigation("NotasAlumnos");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.ApplicationRole", b =>
                {
                    b.Navigation("Funcionalidades");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.ApplicationUser", b =>
                {
                    b.Navigation("MateriasProfesor");

                    b.Navigation("NotasAlumnos");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.GrupoModel", b =>
                {
                    b.Navigation("Alumnos");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Profesores");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.MateriaModel", b =>
                {
                    b.Navigation("MateriaProfesores");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.MateriaProfesorModel", b =>
                {
                    b.Navigation("Notas");
                });

            modelBuilder.Entity("BackSistemaUbala.Models.ProfesorModel", b =>
                {
                    b.Navigation("MateriasProfesor");
                });

            modelBuilder.Entity("General_back.Security.Models.ApplicationClaim", b =>
                {
                    b.Navigation("RolesClaims");

                    b.Navigation("UsersClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
